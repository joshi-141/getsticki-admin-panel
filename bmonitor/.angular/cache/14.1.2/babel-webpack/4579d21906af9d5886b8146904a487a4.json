{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from '@wry/equality';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from \"../../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function useQuery(query, options) {\n  if (options === void 0) {\n    options = Object.create(null);\n  }\n\n  return useInternalState(useApolloClient(options.client), query).useQuery(options);\n}\nexport function useInternalState(client, query) {\n  var stateRef = useRef();\n\n  if (!stateRef.current || client !== stateRef.current.client || query !== stateRef.current.query) {\n    stateRef.current = new InternalState(client, query, stateRef.current);\n  }\n\n  var state = stateRef.current;\n\n  var _a = useState(0),\n      _tick = _a[0],\n      setTick = _a[1];\n\n  state.forceUpdate = function () {\n    setTick(function (tick) {\n      return tick + 1;\n    });\n  };\n\n  return state;\n}\n\nvar InternalState = function () {\n  function InternalState(client, query, previous) {\n    this.client = client;\n    this.query = query;\n    this.asyncResolveFns = new Set();\n    this.optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)();\n    this.ssrDisabledResult = maybeDeepFreeze({\n      loading: true,\n      data: void 0,\n      error: void 0,\n      networkStatus: NetworkStatus.loading\n    });\n    this.skipStandbyResult = maybeDeepFreeze({\n      loading: false,\n      data: void 0,\n      error: void 0,\n      networkStatus: NetworkStatus.ready\n    });\n    this.toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)();\n    verifyDocumentType(query, DocumentType.Query);\n    var previousResult = previous && previous.result;\n    var previousData = previousResult && previousResult.data;\n\n    if (previousData) {\n      this.previousData = previousData;\n    }\n  }\n\n  InternalState.prototype.forceUpdate = function () {\n    __DEV__ && invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n  };\n\n  InternalState.prototype.asyncUpdate = function () {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      _this.asyncResolveFns.add(resolve);\n\n      _this.optionsToIgnoreOnce.add(_this.watchQueryOptions);\n\n      _this.forceUpdate();\n    });\n  };\n\n  InternalState.prototype.useQuery = function (options) {\n    var _this = this;\n\n    this.renderPromises = useContext(getApolloContext()).renderPromises;\n    this.useOptions(options);\n    var obsQuery = this.useObservableQuery();\n    var result = useSyncExternalStore(useCallback(function () {\n      if (_this.renderPromises) {\n        return function () {};\n      }\n\n      var onNext = function () {\n        var previousResult = _this.result;\n        var result = obsQuery.getCurrentResult();\n\n        if (previousResult && previousResult.loading === result.loading && previousResult.networkStatus === result.networkStatus && equal(previousResult.data, result.data)) {\n          return;\n        }\n\n        _this.setResult(result);\n      };\n\n      var onError = function (error) {\n        var last = obsQuery[\"last\"];\n        subscription.unsubscribe();\n\n        try {\n          obsQuery.resetLastResults();\n          subscription = obsQuery.subscribe(onNext, onError);\n        } finally {\n          obsQuery[\"last\"] = last;\n        }\n\n        if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n          throw error;\n        }\n\n        var previousResult = _this.result;\n\n        if (!previousResult || previousResult && previousResult.loading || !equal(error, previousResult.error)) {\n          _this.setResult({\n            data: previousResult && previousResult.data,\n            error: error,\n            loading: false,\n            networkStatus: NetworkStatus.error\n          });\n        }\n      };\n\n      var subscription = obsQuery.subscribe(onNext, onError);\n      return function () {\n        return subscription.unsubscribe();\n      };\n    }, [obsQuery, this.renderPromises, this.client.disableNetworkFetches]), function () {\n      return _this.getCurrentResult();\n    }, function () {\n      return _this.getCurrentResult();\n    });\n    this.unsafeHandlePartialRefetch(result);\n    var queryResult = this.toQueryResult(result);\n\n    if (!queryResult.loading && this.asyncResolveFns.size) {\n      this.asyncResolveFns.forEach(function (resolve) {\n        return resolve(queryResult);\n      });\n      this.asyncResolveFns.clear();\n    }\n\n    return queryResult;\n  };\n\n  InternalState.prototype.useOptions = function (options) {\n    var _a;\n\n    var watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n    var currentWatchQueryOptions = this.watchQueryOptions;\n\n    if (this.optionsToIgnoreOnce.has(currentWatchQueryOptions) || !equal(watchQueryOptions, currentWatchQueryOptions)) {\n      this.watchQueryOptions = watchQueryOptions;\n\n      if (currentWatchQueryOptions && this.observable) {\n        this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n        this.observable.reobserve(this.getObsQueryOptions());\n        this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n        this.result = void 0;\n      }\n    }\n\n    this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n    this.onError = options.onError || InternalState.prototype.onError;\n\n    if ((this.renderPromises || this.client.disableNetworkFetches) && this.queryHookOptions.ssr === false && !this.queryHookOptions.skip) {\n      this.result = this.ssrDisabledResult;\n    } else if (this.queryHookOptions.skip || this.watchQueryOptions.fetchPolicy === 'standby') {\n      this.result = this.skipStandbyResult;\n    } else if (this.result === this.ssrDisabledResult || this.result === this.skipStandbyResult) {\n      this.result = void 0;\n    }\n  };\n\n  InternalState.prototype.getObsQueryOptions = function () {\n    var toMerge = [];\n    var globalDefaults = this.client.defaultOptions.watchQuery;\n    if (globalDefaults) toMerge.push(globalDefaults);\n\n    if (this.queryHookOptions.defaultOptions) {\n      toMerge.push(this.queryHookOptions.defaultOptions);\n    }\n\n    toMerge.push(compact(this.observable && this.observable.options, this.watchQueryOptions));\n    return toMerge.reduce(mergeOptions);\n  };\n\n  InternalState.prototype.createWatchQueryOptions = function (_a) {\n    var _b;\n\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var skip = _a.skip,\n        ssr = _a.ssr,\n        onCompleted = _a.onCompleted,\n        onError = _a.onError,\n        displayName = _a.displayName,\n        defaultOptions = _a.defaultOptions,\n        otherOptions = __rest(_a, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"displayName\", \"defaultOptions\"]);\n\n    var watchQueryOptions = Object.assign(otherOptions, {\n      query: this.query\n    });\n\n    if (this.renderPromises && (watchQueryOptions.fetchPolicy === 'network-only' || watchQueryOptions.fetchPolicy === 'cache-and-network')) {\n      watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {};\n    }\n\n    if (skip) {\n      var _c = watchQueryOptions.fetchPolicy,\n          fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c,\n          _d = watchQueryOptions.initialFetchPolicy,\n          initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n      Object.assign(watchQueryOptions, {\n        initialFetchPolicy: initialFetchPolicy,\n        fetchPolicy: 'standby'\n      });\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy = ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) || this.getDefaultFetchPolicy();\n    }\n\n    return watchQueryOptions;\n  };\n\n  InternalState.prototype.getDefaultFetchPolicy = function () {\n    var _a, _b;\n\n    return ((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) || ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || \"cache-first\";\n  };\n\n  InternalState.prototype.onCompleted = function (data) {};\n\n  InternalState.prototype.onError = function (error) {};\n\n  InternalState.prototype.useObservableQuery = function () {\n    var obsQuery = this.observable = this.renderPromises && this.renderPromises.getSSRObservable(this.watchQueryOptions) || this.observable || this.client.watchQuery(this.getObsQueryOptions());\n    this.obsQueryFields = useMemo(function () {\n      return {\n        refetch: obsQuery.refetch.bind(obsQuery),\n        reobserve: obsQuery.reobserve.bind(obsQuery),\n        fetchMore: obsQuery.fetchMore.bind(obsQuery),\n        updateQuery: obsQuery.updateQuery.bind(obsQuery),\n        startPolling: obsQuery.startPolling.bind(obsQuery),\n        stopPolling: obsQuery.stopPolling.bind(obsQuery),\n        subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery)\n      };\n    }, [obsQuery]);\n    var ssrAllowed = !(this.queryHookOptions.ssr === false || this.queryHookOptions.skip);\n\n    if (this.renderPromises && ssrAllowed) {\n      this.renderPromises.registerSSRObservable(obsQuery);\n\n      if (obsQuery.getCurrentResult().loading) {\n        this.renderPromises.addObservableQueryPromise(obsQuery);\n      }\n    }\n\n    return obsQuery;\n  };\n\n  InternalState.prototype.setResult = function (nextResult) {\n    var previousResult = this.result;\n\n    if (previousResult && previousResult.data) {\n      this.previousData = previousResult.data;\n    }\n\n    this.result = nextResult;\n    this.forceUpdate();\n    this.handleErrorOrCompleted(nextResult);\n  };\n\n  InternalState.prototype.handleErrorOrCompleted = function (result) {\n    if (!result.loading) {\n      if (result.error) {\n        this.onError(result.error);\n      } else if (result.data) {\n        this.onCompleted(result.data);\n      }\n    }\n  };\n\n  InternalState.prototype.getCurrentResult = function () {\n    if (!this.result) {\n      this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult());\n    }\n\n    return this.result;\n  };\n\n  InternalState.prototype.toQueryResult = function (result) {\n    var queryResult = this.toQueryResultCache.get(result);\n    if (queryResult) return queryResult;\n\n    var data = result.data,\n        partial = result.partial,\n        resultWithoutPartial = __rest(result, [\"data\", \"partial\"]);\n\n    this.toQueryResultCache.set(result, queryResult = __assign(__assign(__assign({\n      data: data\n    }, resultWithoutPartial), this.obsQueryFields), {\n      client: this.client,\n      observable: this.observable,\n      variables: this.observable.variables,\n      called: !this.queryHookOptions.skip,\n      previousData: this.previousData\n    }));\n\n    if (!queryResult.error && isNonEmptyArray(result.errors)) {\n      queryResult.error = new ApolloError({\n        graphQLErrors: result.errors\n      });\n    }\n\n    return queryResult;\n  };\n\n  InternalState.prototype.unsafeHandlePartialRefetch = function (result) {\n    if (result.partial && this.queryHookOptions.partialRefetch && !result.loading && (!result.data || Object.keys(result.data).length === 0) && this.observable.options.fetchPolicy !== 'cache-only') {\n      Object.assign(result, {\n        loading: true,\n        networkStatus: NetworkStatus.refetch\n      });\n      this.observable.refetch();\n    }\n  };\n\n  return InternalState;\n}();","map":{"version":3,"names":["__assign","__rest","invariant","useCallback","useContext","useMemo","useRef","useState","useSyncExternalStore","equal","mergeOptions","getApolloContext","ApolloError","NetworkStatus","DocumentType","verifyDocumentType","useApolloClient","canUseWeakMap","canUseWeakSet","compact","isNonEmptyArray","maybeDeepFreeze","hasOwnProperty","Object","prototype","useQuery","query","options","create","useInternalState","client","stateRef","current","InternalState","state","_a","_tick","setTick","forceUpdate","tick","previous","asyncResolveFns","Set","optionsToIgnoreOnce","WeakSet","ssrDisabledResult","loading","data","error","networkStatus","skipStandbyResult","ready","toQueryResultCache","WeakMap","Map","Query","previousResult","result","previousData","__DEV__","warn","asyncUpdate","_this","Promise","resolve","add","watchQueryOptions","renderPromises","useOptions","obsQuery","useObservableQuery","onNext","getCurrentResult","setResult","onError","last","subscription","unsubscribe","resetLastResults","subscribe","call","disableNetworkFetches","unsafeHandlePartialRefetch","queryResult","toQueryResult","size","forEach","clear","createWatchQueryOptions","queryHookOptions","currentWatchQueryOptions","has","observable","delete","reobserve","getObsQueryOptions","onCompleted","ssr","skip","fetchPolicy","toMerge","globalDefaults","defaultOptions","watchQuery","push","reduce","_b","displayName","otherOptions","assign","variables","_c","getDefaultFetchPolicy","_d","initialFetchPolicy","getSSRObservable","obsQueryFields","refetch","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","ssrAllowed","registerSSRObservable","addObservableQueryPromise","nextResult","handleErrorOrCompleted","get","partial","resultWithoutPartial","set","called","errors","graphQLErrors","partialRefetch","keys","length"],"sources":["/Users/phoungeunvantho/B.COM/bmonitor.com/bmonitor/node_modules/@apollo/client/react/hooks/useQuery.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport { useCallback, useContext, useMemo, useRef, useState, } from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from '@wry/equality';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus, } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from \"../../utilities/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function useQuery(query, options) {\n    if (options === void 0) { options = Object.create(null); }\n    return useInternalState(useApolloClient(options.client), query).useQuery(options);\n}\nexport function useInternalState(client, query) {\n    var stateRef = useRef();\n    if (!stateRef.current ||\n        client !== stateRef.current.client ||\n        query !== stateRef.current.query) {\n        stateRef.current = new InternalState(client, query, stateRef.current);\n    }\n    var state = stateRef.current;\n    var _a = useState(0), _tick = _a[0], setTick = _a[1];\n    state.forceUpdate = function () {\n        setTick(function (tick) { return tick + 1; });\n    };\n    return state;\n}\nvar InternalState = (function () {\n    function InternalState(client, query, previous) {\n        this.client = client;\n        this.query = query;\n        this.asyncResolveFns = new Set();\n        this.optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)();\n        this.ssrDisabledResult = maybeDeepFreeze({\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.loading,\n        });\n        this.skipStandbyResult = maybeDeepFreeze({\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.ready,\n        });\n        this.toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)();\n        verifyDocumentType(query, DocumentType.Query);\n        var previousResult = previous && previous.result;\n        var previousData = previousResult && previousResult.data;\n        if (previousData) {\n            this.previousData = previousData;\n        }\n    }\n    InternalState.prototype.forceUpdate = function () {\n        __DEV__ && invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n    };\n    InternalState.prototype.asyncUpdate = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.asyncResolveFns.add(resolve);\n            _this.optionsToIgnoreOnce.add(_this.watchQueryOptions);\n            _this.forceUpdate();\n        });\n    };\n    InternalState.prototype.useQuery = function (options) {\n        var _this = this;\n        this.renderPromises = useContext(getApolloContext()).renderPromises;\n        this.useOptions(options);\n        var obsQuery = this.useObservableQuery();\n        var result = useSyncExternalStore(useCallback(function () {\n            if (_this.renderPromises) {\n                return function () { };\n            }\n            var onNext = function () {\n                var previousResult = _this.result;\n                var result = obsQuery.getCurrentResult();\n                if (previousResult &&\n                    previousResult.loading === result.loading &&\n                    previousResult.networkStatus === result.networkStatus &&\n                    equal(previousResult.data, result.data)) {\n                    return;\n                }\n                _this.setResult(result);\n            };\n            var onError = function (error) {\n                var last = obsQuery[\"last\"];\n                subscription.unsubscribe();\n                try {\n                    obsQuery.resetLastResults();\n                    subscription = obsQuery.subscribe(onNext, onError);\n                }\n                finally {\n                    obsQuery[\"last\"] = last;\n                }\n                if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n                    throw error;\n                }\n                var previousResult = _this.result;\n                if (!previousResult ||\n                    (previousResult && previousResult.loading) ||\n                    !equal(error, previousResult.error)) {\n                    _this.setResult({\n                        data: (previousResult && previousResult.data),\n                        error: error,\n                        loading: false,\n                        networkStatus: NetworkStatus.error,\n                    });\n                }\n            };\n            var subscription = obsQuery.subscribe(onNext, onError);\n            return function () { return subscription.unsubscribe(); };\n        }, [\n            obsQuery,\n            this.renderPromises,\n            this.client.disableNetworkFetches,\n        ]), function () { return _this.getCurrentResult(); }, function () { return _this.getCurrentResult(); });\n        this.unsafeHandlePartialRefetch(result);\n        var queryResult = this.toQueryResult(result);\n        if (!queryResult.loading && this.asyncResolveFns.size) {\n            this.asyncResolveFns.forEach(function (resolve) { return resolve(queryResult); });\n            this.asyncResolveFns.clear();\n        }\n        return queryResult;\n    };\n    InternalState.prototype.useOptions = function (options) {\n        var _a;\n        var watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var currentWatchQueryOptions = this.watchQueryOptions;\n        if (this.optionsToIgnoreOnce.has(currentWatchQueryOptions) ||\n            !equal(watchQueryOptions, currentWatchQueryOptions)) {\n            this.watchQueryOptions = watchQueryOptions;\n            if (currentWatchQueryOptions && this.observable) {\n                this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n                this.observable.reobserve(this.getObsQueryOptions());\n                this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n                this.result = void 0;\n            }\n        }\n        this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n        this.onError = options.onError || InternalState.prototype.onError;\n        if ((this.renderPromises || this.client.disableNetworkFetches) &&\n            this.queryHookOptions.ssr === false &&\n            !this.queryHookOptions.skip) {\n            this.result = this.ssrDisabledResult;\n        }\n        else if (this.queryHookOptions.skip ||\n            this.watchQueryOptions.fetchPolicy === 'standby') {\n            this.result = this.skipStandbyResult;\n        }\n        else if (this.result === this.ssrDisabledResult ||\n            this.result === this.skipStandbyResult) {\n            this.result = void 0;\n        }\n    };\n    InternalState.prototype.getObsQueryOptions = function () {\n        var toMerge = [];\n        var globalDefaults = this.client.defaultOptions.watchQuery;\n        if (globalDefaults)\n            toMerge.push(globalDefaults);\n        if (this.queryHookOptions.defaultOptions) {\n            toMerge.push(this.queryHookOptions.defaultOptions);\n        }\n        toMerge.push(compact(this.observable && this.observable.options, this.watchQueryOptions));\n        return toMerge.reduce(mergeOptions);\n    };\n    InternalState.prototype.createWatchQueryOptions = function (_a) {\n        var _b;\n        if (_a === void 0) { _a = {}; }\n        var skip = _a.skip, ssr = _a.ssr, onCompleted = _a.onCompleted, onError = _a.onError, displayName = _a.displayName, defaultOptions = _a.defaultOptions, otherOptions = __rest(_a, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"displayName\", \"defaultOptions\"]);\n        var watchQueryOptions = Object.assign(otherOptions, { query: this.query });\n        if (this.renderPromises &&\n            (watchQueryOptions.fetchPolicy === 'network-only' ||\n                watchQueryOptions.fetchPolicy === 'cache-and-network')) {\n            watchQueryOptions.fetchPolicy = 'cache-first';\n        }\n        if (!watchQueryOptions.variables) {\n            watchQueryOptions.variables = {};\n        }\n        if (skip) {\n            var _c = watchQueryOptions.fetchPolicy, fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c, _d = watchQueryOptions.initialFetchPolicy, initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n            Object.assign(watchQueryOptions, {\n                initialFetchPolicy: initialFetchPolicy,\n                fetchPolicy: 'standby',\n            });\n        }\n        else if (!watchQueryOptions.fetchPolicy) {\n            watchQueryOptions.fetchPolicy =\n                ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) ||\n                    this.getDefaultFetchPolicy();\n        }\n        return watchQueryOptions;\n    };\n    InternalState.prototype.getDefaultFetchPolicy = function () {\n        var _a, _b;\n        return (((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) ||\n            ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) ||\n            \"cache-first\");\n    };\n    InternalState.prototype.onCompleted = function (data) { };\n    InternalState.prototype.onError = function (error) { };\n    InternalState.prototype.useObservableQuery = function () {\n        var obsQuery = this.observable =\n            this.renderPromises\n                && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n                || this.observable\n                || this.client.watchQuery(this.getObsQueryOptions());\n        this.obsQueryFields = useMemo(function () { return ({\n            refetch: obsQuery.refetch.bind(obsQuery),\n            reobserve: obsQuery.reobserve.bind(obsQuery),\n            fetchMore: obsQuery.fetchMore.bind(obsQuery),\n            updateQuery: obsQuery.updateQuery.bind(obsQuery),\n            startPolling: obsQuery.startPolling.bind(obsQuery),\n            stopPolling: obsQuery.stopPolling.bind(obsQuery),\n            subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n        }); }, [obsQuery]);\n        var ssrAllowed = !(this.queryHookOptions.ssr === false ||\n            this.queryHookOptions.skip);\n        if (this.renderPromises && ssrAllowed) {\n            this.renderPromises.registerSSRObservable(obsQuery);\n            if (obsQuery.getCurrentResult().loading) {\n                this.renderPromises.addObservableQueryPromise(obsQuery);\n            }\n        }\n        return obsQuery;\n    };\n    InternalState.prototype.setResult = function (nextResult) {\n        var previousResult = this.result;\n        if (previousResult && previousResult.data) {\n            this.previousData = previousResult.data;\n        }\n        this.result = nextResult;\n        this.forceUpdate();\n        this.handleErrorOrCompleted(nextResult);\n    };\n    InternalState.prototype.handleErrorOrCompleted = function (result) {\n        if (!result.loading) {\n            if (result.error) {\n                this.onError(result.error);\n            }\n            else if (result.data) {\n                this.onCompleted(result.data);\n            }\n        }\n    };\n    InternalState.prototype.getCurrentResult = function () {\n        if (!this.result) {\n            this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult());\n        }\n        return this.result;\n    };\n    InternalState.prototype.toQueryResult = function (result) {\n        var queryResult = this.toQueryResultCache.get(result);\n        if (queryResult)\n            return queryResult;\n        var data = result.data, partial = result.partial, resultWithoutPartial = __rest(result, [\"data\", \"partial\"]);\n        this.toQueryResultCache.set(result, queryResult = __assign(__assign(__assign({ data: data }, resultWithoutPartial), this.obsQueryFields), { client: this.client, observable: this.observable, variables: this.observable.variables, called: !this.queryHookOptions.skip, previousData: this.previousData }));\n        if (!queryResult.error && isNonEmptyArray(result.errors)) {\n            queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n        }\n        return queryResult;\n    };\n    InternalState.prototype.unsafeHandlePartialRefetch = function (result) {\n        if (result.partial &&\n            this.queryHookOptions.partialRefetch &&\n            !result.loading &&\n            (!result.data || Object.keys(result.data).length === 0) &&\n            this.observable.options.fetchPolicy !== 'cache-only') {\n            Object.assign(result, {\n                loading: true,\n                networkStatus: NetworkStatus.refetch,\n            });\n            this.observable.refetch();\n        }\n    };\n    return InternalState;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}