{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n\n(function (DocumentType) {\n  DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n  DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n  DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\n\nvar cache = new Map();\nexport function operationName(type) {\n  var name;\n\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n\n  return name;\n}\nexport function parser(document) {\n  var cached = cache.get(document);\n  if (cached) return cached;\n  var variables, type, name;\n  __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") + \"DocumentNode. You may need to use 'graphql-tag' or another method \" + \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 30);\n  var fragments = [];\n  var queries = [];\n  var mutations = [];\n  var subscriptions = [];\n\n  for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n    var x = _a[_i];\n\n    if (x.kind === 'FragmentDefinition') {\n      fragments.push(x);\n      continue;\n    }\n\n    if (x.kind === 'OperationDefinition') {\n      switch (x.operation) {\n        case 'query':\n          queries.push(x);\n          break;\n\n        case 'mutation':\n          mutations.push(x);\n          break;\n\n        case 'subscription':\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  __DEV__ ? invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, \"Passing only a fragment to 'graphql' is not yet supported. \" + \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length || queries.length || mutations.length || subscriptions.length, 31);\n  __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" + \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") + \"subscriptions and \".concat(mutations.length, \" mutations. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 32);\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n  var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n  __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") + \"\".concat(definitions.length, \" definitions. \") + \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 33);\n  var definition = definitions[0];\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data';\n  }\n\n  var payload = {\n    name: name,\n    type: type,\n    variables: variables\n  };\n  cache.set(document, payload);\n  return payload;\n}\nexport function verifyDocumentType(document, type) {\n  var operation = parser(document);\n  var requiredOperationName = operationName(type);\n  var usedOperationName = operationName(operation.type);\n  __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") + \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 34);\n}","map":{"version":3,"names":["invariant","DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","cached","get","variables","__DEV__","kind","concat","fragments","queries","mutations","subscriptions","_i","_a","definitions","length","x","push","operation","definition","variableDefinitions","value","payload","set","verifyDocumentType","requiredOperationName","usedOperationName"],"sources":["/Users/phoungeunvantho/B.COM/bmonitor.com/bmonitor/node_modules/@apollo/client/react/parser/index.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    __DEV__ ? invariant(!!document && !!document.kind, \"Argument of \".concat(document, \" passed to parser was not a valid GraphQL \") +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\") : invariant(!!document && !!document.kind, 30);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for (var _i = 0, _a = document.definitions; _i < _a.length; _i++) {\n        var x = _a[_i];\n        if (x.kind === 'FragmentDefinition') {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === 'OperationDefinition') {\n            switch (x.operation) {\n                case 'query':\n                    queries.push(x);\n                    break;\n                case 'mutation':\n                    mutations.push(x);\n                    break;\n                case 'subscription':\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    __DEV__ ? invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\") : invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), 31);\n    __DEV__ ? invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        \"\".concat(document, \" had \").concat(queries.length, \" queries, \").concat(subscriptions.length, \" \") +\n        \"subscriptions and \".concat(mutations.length, \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(queries.length + mutations.length + subscriptions.length <= 1, 32);\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    __DEV__ ? invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \".concat(document, \" had \") +\n        \"\".concat(definitions.length, \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\") : invariant(definitions.length === 1, 33);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\nexport function verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    __DEV__ ? invariant(operation.type === type, \"Running a \".concat(requiredOperationName, \" requires a graphql \") +\n        \"\".concat(requiredOperationName, \", but a \").concat(usedOperationName, \" was used instead.\")) : invariant(operation.type === type, 34);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}