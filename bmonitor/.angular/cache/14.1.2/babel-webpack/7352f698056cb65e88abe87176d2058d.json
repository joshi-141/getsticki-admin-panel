{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n\n  var _a = useState({\n    called: false,\n    loading: false,\n    client: client\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var ref = useRef({\n    result: result,\n    mutationId: 0,\n    isMounted: true,\n    client: client,\n    mutation: mutation,\n    options: options\n  });\n  {\n    Object.assign(ref.current, {\n      client: client,\n      options: options,\n      mutation: mutation\n    });\n  }\n  var execute = useCallback(function (executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n\n    var _a = ref.current,\n        client = _a.client,\n        options = _a.options,\n        mutation = _a.mutation;\n\n    var baseOptions = __assign(__assign({}, options), {\n      mutation: mutation\n    });\n\n    if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client\n      });\n    }\n\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client.mutate(clientOptions).then(function (response) {\n      var _a, _b, _c;\n\n      var data = response.data,\n          errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({\n        graphQLErrors: errors\n      }) : void 0;\n\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data: data,\n          error: error,\n          client: client\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n\n      (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data);\n      (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data);\n      return response;\n    }).catch(function (error) {\n      var _a, _b, _c, _d;\n\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error: error,\n          data: void 0,\n          called: true,\n          client: client\n        };\n\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n\n      if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n        (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error);\n        (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error);\n        return {\n          data: void 0,\n          errors: error\n        };\n      }\n\n      throw error;\n    });\n  }, []);\n  var reset = useCallback(function () {\n    setResult({\n      called: false,\n      loading: false,\n      client: client\n    });\n  }, []);\n  useEffect(function () {\n    ref.current.isMounted = true;\n    return function () {\n      ref.current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({\n    reset: reset\n  }, result)];\n}","map":{"version":3,"names":["__assign","useCallback","useEffect","useRef","useState","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useMutation","mutation","options","client","Mutation","_a","called","loading","result","setResult","ref","mutationId","isMounted","Object","assign","current","execute","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mutate","then","response","_b","_c","errors","length","graphQLErrors","result_1","onCompleted","call","catch","_d","result_2","onError","reset"],"sources":["/Users/phoungeunvantho/B.COM/bmonitor.com/bmonitor/node_modules/@apollo/client/react/hooks/useMutation.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions, } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, client = _a.client, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        if (!ref.current.result.loading && !baseOptions.ignoreResults) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function (response) {\n            var _a, _b, _c;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0\n                ? new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data);\n            (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data);\n            return response;\n        }).catch(function (error) {\n            var _a, _b, _c, _d;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n                (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error);\n                (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error);\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = useCallback(function () {\n        setResult({ called: false, loading: false, client: client });\n    }, []);\n    useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}